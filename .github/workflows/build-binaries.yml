name: Build Native Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          # Linux x64
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: libwaldb_node.so
            
          # macOS x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact: libwaldb_node.dylib
            
          # macOS ARM64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: libwaldb_node.dylib
            
          # Windows x64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: waldb_node.dll

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          
      - name: Build
        working-directory: ./bindings/node
        run: |
          cargo build --release --target ${{ matrix.target }}
          
      - name: Copy artifact
        shell: bash
        working-directory: ./bindings/node
        run: |
          cp ../../target/${{ matrix.target }}/release/${{ matrix.artifact }} index.node
          
      - name: Package binary
        shell: bash
        working-directory: ./bindings/node
        run: |
          tar -czf waldb-${{ matrix.target }}.tar.gz index.node
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.target }}
          path: ./bindings/node/waldb-${{ matrix.target }}.tar.gz
          
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./binaries
          pattern: binary-*
          merge-multiple: true
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./binaries/*.tar.gz
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}